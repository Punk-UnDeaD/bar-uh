# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $cacheStorageFolder: '%kernel.project_dir%/var/cache-storage'
            $cacheStorageLifeTime: 900
            $lockFactory: "@lockFactory"
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Model/**/Entity'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/**/Command.php'

    App\Model\Media\Entity\Repository\ImageRepository: ~

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Menu\SidebarMenu:
        tags: [{ name: knp_menu.menu_builder, method: build, alias: sidebar }]
        arguments: ["@knp_menu.factory"]

    redis:
        class: Redis
        calls:
            - connect: ['redis']

    lockStore:
        class: Symfony\Component\Lock\Store\RedisStore
        arguments: ['@redis']

    lockFactory:
        class: Symfony\Component\Lock\LockFactory
        arguments: ['@lockStore']

    App\Controller\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: 5000 }

    App\Controller\CommandValueResolver:
        tags:
            - { name: controller.argument_value_resolver }

    transliterator.any_to_latin:
        class: Transliterator
        factory: [\Transliterator, create]
        arguments: ['Any-Latin']

    transliterator.latin_to_ascii:
        class: Transliterator
        factory: [\Transliterator, create]
        arguments: ['Latin-ASCII']

    App\Service\Transliterator:
        arguments: ['@transliterator.any_to_latin', '@transliterator.latin_to_ascii']

    Twig\DeferredExtension\DeferredExtension:
        tags:
            - { name: twig.extension }

    App\Twig\WebLinkExtension:
        tags:
            - { name: twig.extension }
            - { name: kernel.reset, method: reset }
        arguments: [ '@twig.extension.weblink' ]

    App\Twig\HoarderExtension:
        tags:
            - { name: twig.extension }
            - { name: kernel.reset, method: reset }
